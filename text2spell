#!/usr/bin/env ruby

# File: text2spell.rb

alefbet = {
  'a' => 'alfa',
  'b' => 'bravo',
  'c' => 'charlie',
  'd' => 'delta',
  'e' => 'echo',
  'f' => 'foxtrot',
  'g' => 'golf',
  'h' => 'hotel',
  'i' => 'india',
  'j' => 'juliett',
  'k' => 'kilo',
  'l' => 'lima',
  'm' => 'mike',
  'n' => 'november',
  'o' => 'oscar',
  'p' => 'papa',
  'q' => 'quebec',
  'r' => 'romeo',
  's' => 'sierra',
  't' => 'tango',
  'u' => 'uniform',
  'v' => 'victor',
  'w' => 'whiskey',
  'x' => 'x-ray',
  'y' => 'yankee',
  'z' => 'zulu',
  '0' => 'zero',
  '1' => 'one',
  '2' => 'two',
  '3' => 'three',
  '4' => 'four',
  '5' => 'five',
  '6' => 'six',
  '7' => 'seven',
  '8' => 'eight',
  '9' => 'nine'
}

def prompt()
  print "Enter text: "
  text = gets.chomp
end

text = ARGV.empty? ? prompt : ARGV[0]

words = text.split(' ')
longest = words.max_by(&:length)

words.each { |word|
  #print word
  printf "%-#{longest.length}s => ", word
  
  #print spelling
  chars = word.downcase.split('')
  len = chars.length
  cc = 0
  chars.each { |c|
    if cc < len-1
      print "#{alefbet[c].upcase} " #space
    elsif cc == len-1
      print "#{alefbet[c].upcase}\n" #newline
    end
    cc += 1
  }
}
